{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit';\nimport { getUser } from \"../api/fakeApiUser\";\nexport var fetchUser = createAsyncThunk('user/getUser', _asyncToGenerator(function* () {\n  var response = yield getUser();\n  console.log(response);\n  return response.data;\n}));\nvar userAdapter = createEntityAdapter();\nvar userSlice = createSlice({\n  name: 'user',\n  initialState: userAdapter.getInitialState({\n    isLoading: false\n  }),\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchUser.pending, function (state, action) {\n      console.log(state, action);\n      state.isLoading = true;\n    }).addCase(fetchUser.fulfilled, function (state, action) {\n      userAdapter.setAll(state, action.payload);\n      state.isLoading = false;\n    }).addCase(fetchUser.rejected, function (state) {\n      state.isLoading = false;\n    });\n  }\n});\nvar _userAdapter$getSelec = userAdapter.getSelectors(function (state) {\n    return state.members;\n  }),\n  selectAll = _userAdapter$getSelec.selectAll;\nexport { selectAll };\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createEntityAdapter","getUser","fetchUser","response","console","log","data","userAdapter","userSlice","name","initialState","getInitialState","isLoading","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","setAll","payload","rejected","getSelectors","members","selectAll","reducer"],"sources":["/Users/ghost/Documents/fixshots/src/stores/user.reducer.js"],"sourcesContent":["import {\n  createSlice,\n  createAsyncThunk,\n  createEntityAdapter\n} from '@reduxjs/toolkit'\nimport { getUser } from '../api/fakeApiUser'\n\nexport const fetchUser = createAsyncThunk('user/getUser', async () => {\n  const response = await getUser()\n  console.log(response)\n  return response.data\n})\n\nconst userAdapter = createEntityAdapter()\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: userAdapter.getInitialState({\n    isLoading: false\n  }),\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(fetchUser.pending, (state, action) => {\n        console.log(state,action)\n        state.isLoading = true\n      })\n      .addCase(fetchUser.fulfilled, (state, action) => {\n        userAdapter.setAll(state, action.payload)\n        state.isLoading = false\n      })\n      .addCase(fetchUser.rejected, state => {\n        state.isLoading = false\n      })\n  }\n})\n\nexport const { selectAll } = userAdapter.getSelectors(state => state.members)\n\nexport default userSlice.reducer\n"],"mappings":";AAAA,SACEA,WAAW,EACXC,gBAAgB,EAChBC,mBAAmB,QACd,kBAAkB;AACzB,SAASC,OAAO;AAEhB,OAAO,IAAMC,SAAS,GAAGH,gBAAgB,CAAC,cAAc,oBAAE,aAAY;EACpE,IAAMI,QAAQ,SAASF,OAAO,EAAE;EAChCG,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrB,OAAOA,QAAQ,CAACG,IAAI;AACtB,CAAC,EAAC;AAEF,IAAMC,WAAW,GAAGP,mBAAmB,EAAE;AAEzC,IAAMQ,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEH,WAAW,CAACI,eAAe,CAAC;IACxCC,SAAS,EAAE;EACb,CAAC,CAAC;EACFC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE,uBAAAC,OAAO,EAAI;IACxBA,OAAO,CACJC,OAAO,CAACd,SAAS,CAACe,OAAO,EAAE,UAACC,KAAK,EAAEC,MAAM,EAAK;MAC7Cf,OAAO,CAACC,GAAG,CAACa,KAAK,EAACC,MAAM,CAAC;MACzBD,KAAK,CAACN,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDI,OAAO,CAACd,SAAS,CAACkB,SAAS,EAAE,UAACF,KAAK,EAAEC,MAAM,EAAK;MAC/CZ,WAAW,CAACc,MAAM,CAACH,KAAK,EAAEC,MAAM,CAACG,OAAO,CAAC;MACzCJ,KAAK,CAACN,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CACDI,OAAO,CAACd,SAAS,CAACqB,QAAQ,EAAE,UAAAL,KAAK,EAAI;MACpCA,KAAK,CAACN,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEK,4BAAsBL,WAAW,CAACiB,YAAY,CAAC,UAAAN,KAAK;IAAA,OAAIA,KAAK,CAACO,OAAO;EAAA,EAAC;EAA9DC,SAAS,yBAATA,SAAS;AAAqD;AAE7E,eAAelB,SAAS,CAACmB,OAAO"},"metadata":{},"sourceType":"module"}