{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport styles from \"./Home.style\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUser, selectAll } from \"../../../src/stores/user.reducer\";\nimport content from \"./content\";\nimport bookmarkfill from \"../../assets/bookmark/fill.png\";\nimport bookmarknonfill from \"../../assets/bookmark/nonfill.png\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var users = useSelector(selectAll);\n  console.log(users);\n  function ListUser() {\n    return users.map(function (data) {\n      return _jsx(View, {\n        style: styleUser,\n        children: _jsxs(Text, {\n          style: {\n            fontSize: 15\n          },\n          children: [data.id, \". \", data.name]\n        })\n      }, data.id);\n    });\n  }\n  var epochConvertor = function epochConvertor() {\n    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1589343013000;\n    var t = new Date(time);\n    var hours = t.getHours();\n    var minutes = t.getMinutes();\n    var newformat = t.getHours() >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    var formatted = t.toString().split(' ')[0] + ', ' + ('0' + t.getDate()).slice(-2) + '/' + ('0' + (t.getMonth() + 1)).slice(-2) + '/' + t.getFullYear() + ' - ' + ('0' + t.getHours()).slice(-2) + ':' + ('0' + t.getMinutes()).slice(-2) + ' ' + newformat;\n    return formatted;\n  };\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    refreshing = _React$useState2[0],\n    setRefreshing = _React$useState2[1];\n  function Content() {\n    return _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollView,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: content.map(function (content, index) {\n        var _content$tags$;\n        return _jsxs(View, {\n          style: {\n            justifyContent: 'center',\n            borderWidth: 1,\n            borderColor: \"#ccc\",\n            borderRadius: 10,\n            margin: 10\n          },\n          children: [_jsx(Image, {\n            style: styles.thumbnail,\n            source: {\n              uri: content.thumbnail\n            }\n          }), _jsx(Text, {\n            style: {\n              borderWidth: 1,\n              borderColor: \"#ccc\",\n              borderRadius: 10,\n              marginTop: 5,\n              marginLeft: 10,\n              marginBottom: 5,\n              padding: 5,\n              alignSelf: 'flex-start'\n            },\n            children: content == null ? void 0 : (_content$tags$ = content.tags[0]) == null ? void 0 : _content$tags$.label\n          }), _jsx(Text, {\n            style: {\n              flex: 1,\n              fontSize: 25,\n              padding: 10\n            },\n            children: content.title\n          }), _jsx(Text, {\n            style: {\n              flex: 1,\n              fontSize: 18,\n              paddingLeft: 10\n            },\n            children: content.description\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              flex: 1,\n              padding: 10,\n              backgroundColor: 'red'\n            },\n            children: [_jsx(Text, {\n              style: {\n                flex: 1,\n                fontSize: 10\n              },\n              children: epochConvertor(content.timestamp)\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                console.log('TouchableOpacity');\n              },\n              children: _jsx(Image, {\n                source: bookmarkfill,\n                style: {\n                  width: 20,\n                  height: 20,\n                  backgroundColor: 'red'\n                }\n              })\n            })]\n          })]\n        }, index);\n      })\n    });\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\",\n      backgroundColor: '#f9f9f9'\n    }), _jsx(SafeAreaView, {\n      style: styles.SafeAreaView,\n      children: _jsx(Content, {})\n    })]\n  });\n};\nvar styleUser = StyleSheet.create({});\nexport default Home;","map":{"version":3,"names":["React","styles","Icon","useDispatch","useSelector","fetchUser","selectAll","content","bookmarkfill","bookmarknonfill","Home","navigation","dispatch","users","console","log","ListUser","map","data","styleUser","fontSize","id","name","epochConvertor","time","t","Date","hours","getHours","minutes","getMinutes","newformat","formatted","toString","split","getDate","slice","getMonth","getFullYear","wait","timeout","Promise","resolve","setTimeout","onRefresh","useCallback","setRefreshing","then","useState","refreshing","Content","scrollView","index","justifyContent","borderWidth","borderColor","borderRadius","margin","thumbnail","uri","marginTop","marginLeft","marginBottom","padding","alignSelf","tags","label","flex","title","paddingLeft","description","flexDirection","backgroundColor","timestamp","width","height","SafeAreaView","StyleSheet","create"],"sources":["/Users/ghost/Documents/fixshots/src/screens/Home/Home.screen.js"],"sourcesContent":["import React from 'react'\nimport {\n  SafeAreaView,\n  View,\n  Text,\n  StatusBar,\n  TouchableOpacity,\n  StyleSheet,\n  ScrollView,\n  Image,\n  RefreshControl\n} from 'react-native'\nimport styles from './Home.style'\nimport Icon from 'react-native-vector-icons/Ionicons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchUser, selectAll } from '../../../src/stores/user.reducer'\nimport content from './content'\nimport bookmarkfill from '../../assets/bookmark/fill.png'\nimport bookmarknonfill from '../../assets/bookmark/nonfill.png'\n\n\n\nconst Home = ({ navigation }) => {\n  const dispatch = useDispatch()\n  const users = useSelector(selectAll)\n  console.log(users)\n\n  function ListUser() {\n    return users.map(data => {\n      return (\n        <View key={data.id} style={styleUser}>\n          <Text style={{ fontSize: 15 }}>\n            {data.id}. {data.name}\n          </Text>\n        </View>\n      )\n    })\n  }\n\n  const epochConvertor = (time = 1589343013000) => {\n    var t = new Date(time);\n    var hours = t.getHours();\n    var minutes = t.getMinutes();\n    var newformat = t.getHours() >= 12 ? 'PM' : 'AM';  \n    \n    // Find current hour in AM-PM Format \n    hours = hours % 12;  \n    \n    // To display \"0\" as \"12\" \n    hours = hours ? hours : 12;  \n    minutes = minutes < 10 ? '0' + minutes : minutes; \n    var formatted = \n        (t.toString().split(' ')[0]) \n        + ', ' +('0' + t.getDate()).slice(-2) \n        + '/' + ('0' + (t.getMonth() + 1) ).slice(-2)\n        + '/' + (t.getFullYear())\n        + ' - ' + ('0' + t.getHours()).slice(-2)\n        + ':' + ('0' + t.getMinutes()).slice(-2)\n        + ' ' + newformat;\n    return formatted\n  }\n\n  const wait = (timeout) => {\n    return new Promise(resolve => setTimeout(resolve, timeout));\n  }\n  \n\n  const onRefresh = React.useCallback(() => {\n    setRefreshing(true);\n    wait(2000).then(() => setRefreshing(false));\n  }, []);\n\n  const [refreshing, setRefreshing] = React.useState(false);\n\n  function Content(){\n    return (\n      <ScrollView\n        contentContainerStyle={styles.scrollView}\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={onRefresh}\n          />\n        }\n      >\n          {content.map((content,index) => {\n            return(\n              <View \n                key={index}\n                style={{ \n                  // flex: 1, \n                  justifyContent: 'center', \n                  // alignItems: 'center' ,\n                  borderWidth: 1,\n                  borderColor: \"#ccc\",\n                  borderRadius : 10,\n                  margin:10\n                }}>\n                  <Image \n                      style={styles.thumbnail}\n                      source={{ uri : content.thumbnail }}\n                  />\n                  {/* <Image\n                      source={{\n                      uri: 'https://reactnative.dev/img/tiny_logo.png',\n                      }}\n                  /> */}\n                  <Text\n                    style={{\n                      // flex:1,\n                      borderWidth: 1,\n                      borderColor: \"#ccc\",\n                      borderRadius : 10,\n                      marginTop: 5,\n                      marginLeft: 10,\n                      marginBottom : 5,\n                      padding: 5,\n                      alignSelf: 'flex-start',\n                      // flexWrap:'wrap',\n                      // flexDirection:'row'\n                    }} \n                  >\n                    {content?.tags[0]?.label}\n                  </Text>\n                  <Text\n                    style={{\n                      flex:1,\n                      fontSize: 25,\n                      padding: 10\n                    }} \n                  >\n                    {content.title}\n                  </Text>\n                  <Text\n                    style={{\n                      flex:1,\n                      fontSize: 18,\n                      paddingLeft: 10\n                    }}\n                  >\n                    {content.description}\n                  </Text>\n                  <View style={{\n                    //  width : 20,\n                    //  height : 20,\n                    //  backgroundColor : 'red',\n                     flexDirection : 'row',\n                     flex : 1,\n                     padding: 10,\n                     backgroundColor: 'red',\n\n\n                    //  flexWrap : 'wrap'\n                  }}>\n                    <Text\n                      style={{\n                        flex:1,\n                        fontSize: 10,\n                        // paddingRight: 10,\n                      }} \n                    >\n                      {epochConvertor(content.timestamp)}\n                    </Text>\n                    <TouchableOpacity\n                        onPress={ () => {console.log('TouchableOpacity')} } \n                    >\n                      <Image \n                        source={bookmarkfill}\n                        style={{\n                          width : 20,\n                          height : 20,\n                          backgroundColor: 'red',\n                        }}\n                        // source={{\n                        //   url : bookmarkfill,\n                        //   width : 20,\n                        //   height : 20\n                        // }} \n                      />\n                    </TouchableOpacity>\n                    \n                  </View>\n               </View>\n            )\n          })}\n          </ScrollView>\n    )\n  }\n  \n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor={'#f9f9f9'} />\n      {/* <SafeAreaView style={styles.SafeAreaView1} /> */}\n      <SafeAreaView style={styles.SafeAreaView}>\n        {/* <View style={styles.outerWrapper}> */}\n          {/* <Icon name={'ios-person'} size={100} color={'purple'} /> */}\n          {/* <Icon name={'ios-home'} size={100} color={'purple'} /> */}\n\n          {/* <View> */}\n            {/* <TouchableOpacity\n              style={styles.buttonStyle}\n              onPress={() => dispatch(fetchUser())}>\n              <Text style={styles.text}>Click here to show User data:</Text>\n            </TouchableOpacity> */}\n            {/* <ListUser /> */}\n            <Content />\n          {/* </View> */}\n        {/* </View> */}\n      </SafeAreaView>\n    </>\n  )\n}\n\nconst styleUser = StyleSheet.create({\n  // borderBottomWidth: 1,\n  // borderColor: '#eee',\n  // padding: 1,\n  // marginTop: 10\n})\n\nexport default Home\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}